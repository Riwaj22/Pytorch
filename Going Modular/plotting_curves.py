# -*- coding: utf-8 -*-
"""Plotting curves

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18qa2jn-hqtruz0VASslrP0YwhlwPr7n7
"""

import torch
import numpy as np
import pandas as pd
from matplotlib import pyplot as plt

# plotting_utils.py

from typing import Dict, List
import matplotlib.pyplot as plt
import torch

def plot_curves(results: Dict[str, List[torch.Tensor]]):
    loss = [item.detach().cpu().numpy() if isinstance(item, torch.Tensor) else item for item in results["train_loss"]]
    test_loss = [item.detach().cpu().numpy() if isinstance(item, torch.Tensor) else item for item in results["test_loss"]]
    acc = [item.detach().cpu().numpy() if isinstance(item, torch.Tensor) else item for item in results["train_acc"]]
    test_acc = [item.detach().cpu().numpy() if isinstance(item, torch.Tensor) else item for item in results["test_acc"]]

    epochs = range(len(results["train_loss"]))

    plt.figure(figsize=(15, 7))

    plt.subplot(1, 2, 1)
    plt.plot(epochs, loss, label="train_loss")
    plt.plot(epochs, test_loss, label="test_loss")
    plt.title("Loss")
    plt.xlabel("Epochs")
    plt.legend()

    plt.subplot(1, 2, 2)
    plt.plot(epochs, acc, label="train_accuracy")
    plt.plot(epochs, test_acc, label="test_accuracy")
    plt.title("Accuracy")
    plt.xlabel("Epochs")
    plt.legend()

    plt.show()

